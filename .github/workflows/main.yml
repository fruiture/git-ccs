name: Build & Test

on: [push]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Configure JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
          cache: 'gradle'
      - name: Download git-ccs
        uses: engineerd/configurator@v0.0.9
        with:
          name: git-ccs
          url: https://github.com/fruiture/git-ccs/releases/download/1.1.0-RC.3.SNAPSHOT/git-ccs-macos-x64-1.1.0-RC.3.SNAPSHOT.zip
          pathInArchive: git-ccs-macos-x64-1.1.0-RC.3.SNAPSHOT/git-ccs
      - name: Determine Version
        id: version
        run: |
          VERSION=$(git-ccs next release)
          echo "next version: $VERSION"
          echo "VERSION=1.1.0-RC.3.SNAPSHOT" >> "$GITHUB_OUTPUT"
      - name: Build and Publish
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PRIVATE_KEY_PASSWORD: ${{ secrets.GPG_PRIVATE_KEY_PASSWORD }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          VERSION: ${{ steps.version.outputs.VERSION }}
        run: gradle "-Pversion=$VERSION" build publish
      - name: Set Tag
        env:
          VERSION: ${{ steps.version.outputs.VERSION }}
        run: |
          git tag "$VERSION"
          git push origin "$VERSION"
      - name: Github Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.version.outputs.VERSION }}
          tag_name: ${{ steps.version.outputs.VERSION }}
          files: |
            LICENSE
            build/distributions/*
            build/libs/git-ccs-jvm-*
